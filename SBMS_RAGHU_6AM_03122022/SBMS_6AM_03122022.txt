			 Date : 03-12-2022
		    Spring Boot and Microservices
			6AM | Mr. Raghu | (ASHOK IT)
			javabyraghu@gmail.com
  --------------------------------------------------------------------- 
PDF Link:
https://enos.itcollege.ee/~jpoial/allalaadimised/reading/Java-Concurrency-Essentials.pdf


Spring Annotations Configuration:-
@Component : To create Object
@Value     : Direct Value to a variable / Read data from Properties
@ComponentScan : Base-PackageName to scan classes.
@PropertySource : To Load Properties File
---------------------------------------------------------------------
			  Autowiring

*) It is a process of Linking Objects based on Association Mapping (HAS-A)
*) @Autowired annotation is used. So, that container can link them.
*) Autowired annotation Injects Dependency Beans into Dependent Bean.
*) In case of XML Configuration <ref/> tag is used to link objects.

*) Dependency/ variable (ref Type) default value is null.

================usecases==================================
1. @Autowired will search for child class object. 
2. If one child object is found then it is injected.
3. If zero child objects are found then throw exception
    NoSuchBeanDefinitionException , message like : 
	At least 1 bean required

4. To avoid Exception, incase of Zero Matchings found, 
	Make Autowiring Optional
	  @Autowired(required=false).

==========Code===================================
1. pom.xml
	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>5.3.23</version>
		</dependency>
	</dependencies>

2. Spring Beans
package com.app.raghu.bean;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

@Component("edao")
public class EmployeeDao {
	
	@Value("ORACLE")
	private String dbName;

	@Override
	public String toString() {
		return "EmployeeDao [dbName=" + dbName + "]";
	}
	
	
}

---------------
package com.app.raghu.bean;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Component("esobj")
public class EmployeeService {
	
	//@Autowired(required = false)
	@Autowired
	private EmployeeDao dao; //HAS-A

	@Override
	public String toString() {
		return "EmployeeService [dao=" + dao + "]";
	}
	
}

3. Spring Config class
package com.app.raghu.config;

import org.springframework.context.annotation.ComponentScan;

@ComponentScan("com.app.raghu")
public class AppConfig {

}

4. Test class
package com.app.raghu.test;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import com.app.raghu.bean.EmployeeService;
import com.app.raghu.config.AppConfig;

public class Test {

	public static void main(String[] args) {
		ApplicationContext ac = new AnnotationConfigApplicationContext(AppConfig.class);
		EmployeeService es  = ac.getBean("esobj", EmployeeService.class);
		System.out.println(es);
	}
}
=======(Work on this)============================================
Q) What is a method?
Q) What is LifeCycle Method? How it is different from method?
Q) How many LifeCycle Methods in Servlets? Execution Order?
Q) What is the use of Destory method?

===Task=====================================================
Create classes in given order and link then (use Autowiring)
  StudentController----<>StudentService----<>StudentDao

